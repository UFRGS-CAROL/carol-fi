[DEFAULT]

debug = False

# Name of the gdb executable
gdbExecName = /usr/local/cuda/bin/cuda-gdb

# Which fault model to use, 0 -> single; 1 -> half;
# 2 -> random; 3 -> zeros; 4 -> least 16 significant bits (LSB);
# 5 -> least 8 significant bits (LSB)
# If you want multiple fault models, place them separated by ','
# faultModel = 0,2,3
faultModel = 0

# Injection site
# Can be:
# RF -> Register File
# INST_OUT -> Instruction Output (NOT IMPLEMENTED YET)
# INST_ADD -> Instruction Adress (NOT IMPLEMENTED YET)
injectionSite = RF

# Max time factor to finish the app, this will be multiplied by the application running time
# For example if your app spend 2s, and the maxWaitTimes is 5, the max running time before it is
# Considered as a crash is 10s
maxWaitTimes = 5

# Commands to set the session inside GDB environment
gdbInitStrings = file /home/carol/carol-fi/codes/lava/cuda_lava_half;set args -boxes=30 \
                -input_distances=/home/carol/carol-fi/codes/lava/lava_half_distances_30 \
                -input_charges=/home/carol/carol-fi/codes/lava/lava_half_charges_30 \
                -output_gold=/home/carol/carol-fi/codes/lava/lava_half_gold_30 -iterations=5 -streams=1

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 cuda_lava_half

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 cuda-gdb;killall -9 cuda_lava_half;killall -9 cudbgprocess;killall -9 profiler.py; killall -9 flip_value.py

# CSV output file. It will be overwrite at each injection
csvFile = ./fi_cuda_lava_half_single_bit.csv

# YOU SHOULD NOW CREATE A SCRIPT ON BENCHMARK SOURCE TO VERIFY THE GOLD OUTPUT x INJ_OUTPUT
# it must contains a function called sdc_check and must return True or False
# True for masked
# False for SDC
goldenCheckScript = /home/carol/carol-fi/codes/lava/sdc_check.sh

# Signals to send to application
seqSignals = 10

smx = sm_70

makeStderr = codes/lava/stderr.txt

timeWaitStartSignal = 0.2
